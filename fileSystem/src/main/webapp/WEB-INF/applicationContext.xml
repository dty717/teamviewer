<?xml version="1.0" encoding="UTF-8"?>
<!--

       Copyright 2010-2016 the original author or authors.

       Licensed under the Apache License, Version 2.0 (the "License");
       you may not use this file except in compliance with the License.
       You may obtain a copy of the License at

          http://www.apache.org/licenses/LICENSE-2.0

       Unless required by applicable law or agreed to in writing, software
       distributed under the License is distributed on an "AS IS" BASIS,
       WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
       See the License for the specific language governing permissions and
       limitations under the License.

-->
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:jdbc="http://www.springframework.org/schema/jdbc"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:security="http://www.springframework.org/schema/security"
       xmlns:mybatis="http://mybatis.org/schema/mybatis-spring" xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:aop="http://www.springframework.org/schema/aop" xmlns:p="http://www.springframework.org/schema/p"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
     http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
     http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc.xsd
     http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
      http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd
     http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring.xsd
     http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
     http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
     http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">

    <!-- enable component scanning and autowire (beware that this does not enable mapper scanning!) -->
    <context:component-scan base-package="fileSystem.web,fileSystem.service" />

    <!-- enable transactiondemarcation  with annotations -->
    <tx:annotation-driven />

    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!-- one of the properties available; the maximum file size in bytes -->
		<property name="maxUploadSize" value="209715200"/>
	</bean>
	
	<bean id="gson" class="com.google.gson.Gson"></bean>
	<bean id="robot" class="java.awt.Robot"></bean>

    <bean id="corsSource" class="org.springframework.web.cors.UrlBasedCorsConfigurationSource">
        <property name="corsConfigurations">
            <util:map>
                <entry key="/**">
                    <bean class="org.springframework.web.cors.CorsConfiguration">
                        <property name="allowCredentials" value="true" />
                        <property name="allowedHeaders">
                            <list>
                                <value>Authorization</value>
                                <value>Content-Type</value>
                            </list>
                        </property>
                        <property name="allowedMethods">
                            <list>
                                <value>POST</value>
                                <value>GET</value>
                                <value>PUT</value>
                                <value>DELETE</value>
                            </list>
                        </property>
                        <property name="allowedOrigins" value="*" />
                        <property name="exposedHeaders">
                            <list>
                                <value>Location</value>
                                <value>Content-Disposition</value>
                            </list>
                        </property>
                        <property name="maxAge" value="86400" />
                    </bean>
                </entry>
            </util:map>
        </property>
    </bean>
    
    
    <security:http auto-config="true" use-expressions="true">
       <!-- <security:cors configuration-source-ref="corsSource"/>-->
    	<security:intercept-url pattern="/css/**" access="permitAll" />
    	<security:intercept-url pattern="/login" access="permitAll" />
		<security:intercept-url pattern="/logout" access="permitAll" />
		<security:intercept-url pattern="/ajaxLogin" access="permitAll" />
    	<security:intercept-url pattern="/**" access="hasIpAddress('192.168.0.0/16') or 
    	    hasIpAddress('127.0.0.1/32') or hasIpAddress('fe80:0:0:0:bd96:88d:afef:72b0%4') or hasRole('ROLE_USER')" />
        
        <!--
		<security:intercept-url pattern="/logout" access="permitAll" />
        <security:intercept-url pattern="/home" access="hasRole('ROLE_USER')" />
        <security:intercept-url pattern="/admin/**" access="hasRole('ROLE_PAGE_ADMIN')" />
        <security:intercept-url pattern="/db/**" access="hasRole('ROLE_PAGE_ADMIN') and  
        hasRole('ROLE_SUPER_ADMIN')" />-->
        <!--<security:intercept-url pattern="/ex-index.html" access="hasRole('ROLE_USER')" />-->
        <security:form-login login-page="/login" 
        default-target-url="/" authentication-failure-url="/accessdenied" />
        <security:logout logout-success-url="/login" />
        <security:access-denied-handler error-page="/Access_Denied"/>
        <security:csrf disabled="true"/>
        <security:headers>
            <security:frame-options policy="SAMEORIGIN"/>
        </security:headers>
        <security:session-management>
            <security:concurrency-control max-sessions="10" error-if-maximum-exceeded="true" />
        </security:session-management>
    </security:http>
    <bean id="keyEncoder" class="org.springframework.security.crypto.password.NoOpPasswordEncoder">
        <!--<constructor-arg  value="10" />-->
    </bean>
    <security:authentication-manager alias="authenticationManager">
        <security:authentication-provider>
            <security:user-service>
            <security:user name="dty717" password="d52180362" authorities="ROLE_USER" />
            </security:user-service> 
            <!--<security:jdbc-user-service data-source-ref="dataSource"

                               users-by-username-query="
         SELECT USERNAME, PASSWORD, CASE ENABLED WHEN 1 THEN 'true' ELSE 'false' END 'ENABLED'
         FROM TBL_USERS
         WHERE USERNAME=?;"

                               authorities-by-username-query="
        SELECT u.USERNAME, r.ROLENAME
        FROM TBL_USERS u, TBL_USER_ROLE r
        WHERE u.ID = r.USERID
        AND u.USERNAME=?;"

            />-->
            
            <security:password-encoder ref="keyEncoder" />
        </security:authentication-provider>
    </security:authentication-manager>
    


    <mvc:annotation-driven>

    </mvc:annotation-driven>
    
    <mvc:default-servlet-handler/>

    <!--<mvc:resources mapping="/file/**" location="file:/usr/uploadfile/" />
    <mvc:resources mapping="/usr/**" location="file:/usr/github" />-->
    <mvc:resources mapping="/c/**" location="file:/C:/" />
    <mvc:resources mapping="/C/**" location="file:/C:/" />
    <mvc:resources mapping="/c:/**" location="file:/C:/" />
    <mvc:resources mapping="/C:/**" location="file:/C:/" />
    <mvc:resources mapping="/d/**" location="file:/D:/" />
    <mvc:resources mapping="/D/**" location="file:/D:/" />
    <mvc:resources mapping="/d:/**" location="file:/D:/" />
    <mvc:resources mapping="/D:/**" location="file:/D:/" />
    <mvc:resources mapping="/e/**" location="file:/E:/" />
    <mvc:resources mapping="/E/**" location="file:/E:/" />
    <mvc:resources mapping="/e:/**" location="file:/E:/" />
    <mvc:resources mapping="/E:/**" location="file:/E:/" />
    <mvc:resources mapping="/f/**" location="file:/F:/" />
    <mvc:resources mapping="/F/**" location="file:/F:/" />
    <mvc:resources mapping="/f:/**" location="file:/F:/" />
    <mvc:resources mapping="/F:/**" location="file:/F:/" />
    <mvc:resources mapping="/**" location="/" />   
    
</beans>
